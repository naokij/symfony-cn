symfony 圣诞日历 第一天：项目启动
======================================================

挑战
-------------
symfony 圣诞日历是一组24课的教程， 在12月1日和圣诞节之间按日发布。 包括周末在内的每一天，一篇心得教程都会发布。每篇教程都不超过一小时，而且由浅入深地展现 web 2.0 应用开发。 圣诞节时，程序代码将被开放，最终程序将被放到网上。 此程序可用、有意思、有用而且有趣。
 
二十四个少于一小时相当于一天，这正是学习symfony 所需的时间。 每一天，都有新特性添加到 symfony web 开发， 我们借此开发过程向你展示 symfony 功能的同时也提供了绝好的 symfony web 开发练习。 每一天，你都将体会到试用 symfony 进行 web 应用开发的快捷，而且引发你了解更多的内容。

考虑到挑战性的不足，当然也源于我们的惰性，没有为第21天安排内容 - winter time。 社区之中最需求的功能将在那一天被添加到应用，没有准备，我们也有办法填补上这个空白。 那一天将成为寻找 symfony 大师日。

项目
-----------

将要开发的程序是一个深入细节的关于 “展示与讲述”的应用， 就像是一个任务列表，一本电话簿，或是一个书店。 但我们将使用 symfony 从头开发一个项目，融入实用的内容， 大量特色，达到相当的规模。 我们的目标是实实在在地证明 symfony 可以用于复杂的情形，轻松地开发出颇具特色的专业应用。

我们也希望很多人能够用到这个程序， 从而证明 symfony 可以可观可观的负荷。 这也正是为什么需要提供真实的服务，回答现实的需求，或者成为一个创新。 该网站的架设将成为一个现场测试， 有鉴于此，我们需要你作为普通的使用者挖掘、收藏、博客和宣传这个站点，从而获知这个程序所能支撑的访问数量。

整个项目的内容暂时保密。 我们今天要做的事情还很多，就不在这里描述 web2.0 应用的全景了。 这也给你了更多的时间来争辩和添加额外的假想。 当然我们还是需要为它命名，让我们称之为： **askeet** 吧.

今天做什么
--------------

今天的目标是在浏览器中显示应用的一个页面，与此同时建立起一个专业的开发环境。 这包括安装 symfony ，建立应用，网站服务器配置以及建立一个源版本的控制系统。

对于学习了其他教程的读者着很简单，对于其他人也并不难。 而且每位读者都会学到些东西。

我们假设你在使用类 Unix 系统，并且已经安装了 Apache, MySQL 和 PHP5。 如果你使用的是 windows 系统，不用担心：同样会运转正常，你只需要在命令行窗口中键入为数不多的几个命令。

安装 Symfony
--------------------

symfony 得最简单安装方式是通过 [PEAR][1] 。 但是，为了使用 channel （频道）来访问 symfony 你需要将 PEAR 省级到 PEAR 1.4.0 或更高版本（除非你运行的是 PHP 5.1.0，  PEAR 1.4.5 包括在其中）:

    $ pear upgrade PEAR

>**注意**：如果你在使用 PEAR 的过程中遇到什么问题，可以参考 symfony 权威指南中的 [Running symfony](http://www.symfony-project.com/book/1_0/03-Running-Symfony) 章节。

现在你可以添加 'symfony' channel:

    $ pear channel-discover pear.symfony-project.com

你现在可以安装 symfony 的最新版本及其所有相关组件：

    $ pear install symfony/symfony

用命令行查看 symfony 版本来检查 symfony 安装：

    $ symfony -V

如果你想知道这个新结识的命令行工具能为你做什么，键入 `symfony -T` 可以获得相关的列表。 你也许还想知道如何从 tgz 压缩文件或者 svn 库安装 symfony，请阅读symfony 权威指南 [Running symfony](http://www.symfony-project.com/book/1_0/03-Running-Symfony) 章节。 [the symfony wiki](http://www.symfony-project.com/trac/wiki/InstallingSymfonyWithoutPear)中的一个社区文档中也介绍了非 PEAR 安装方法。

建立项目
-------------

在 symfony 中，不同的 **应用** (applications)共享用一个数据模型并被组织到 **项目**(project) 中。 对于 askeet 项目， 我们已经决定建立前台（frontend）和后台（backend）：两个应用。 项目是应用的家，必须首先被建立。 做到这一点，你需要新建一个目录和一个 `symfony init-project` 命令行：

    $ mkdir /home/sfprojects/askeet
    $ cd /home/sfprojects/askeet
    $ symfony init-project askeet

现在，是用 `symfony init-app` 建立前台应用的时候了：

    $ symfony init-app frontend

喔，真快。

>**注意**： 建议 Windows 用户在不包含空格的路径下运行 symfony 和建立新项目 -  `Documents and Settings` 目录也不可以。

建立网站服务
-----------------

### 网站服务配置

更改 Apache 设置另新应用可以被访问。 从专业角度讲，最好将新应用建立为一个虚拟主机（virtual host）， 这也是这里介绍的方式。 但如果你愿意使用别名

（alias）方式，symfony 权威指南 [web server configuration](http://www.symfony-project.com/cookbook/1_0/web_server) cookbook 中有所介绍。

打开 `Apache/conf/` 目录下的 `httpd.conf` 文件，添加如下内容：

    <VirtualHost *:80>
      ServerName askeet
      DocumentRoot "/home/sfprojects/askeet/web"
      DirectoryIndex index.php
      Alias /sf /usr/local/lib/php/data/symfony/web/sf

      <Directory "/home/sfprojects/askeet/web">
       AllowOverride All
      </Directory>
    </VirtualHost>

>**注意**： `/sf` 别名必须指向 PEAR data 目录中的 symfony 文件夹。 确定路径可以使用 `pear config-show` 命令。Symfony 应用需要访问该文件夹中获取一些图片和 javascript 文件files，以便运行网站差错（debug）工具栏和 AJAX 助手（helpers）。

在 Windows 上，你需要将 `Alias` 行更改为类似如下的代码：

      Alias /sf "C:\php\pear\data\symfony\web\sf"
       
### 声明域名

域名 `askeet` 必须在本地声明。

如果你运行的是 Linux 系统，要在 `/etc/hosts` 文件中配置。 如果你运行的是 Windows XP，该文件位于 `C:\WINDOWS\system32\drivers\etc\` 目录。

添加这样一行：

    127.0.0.1         askeet

>**注意**：进行此操作，你需要管理员权限。

如果你不希望建立新的主机，你应该添加一条在其他端口上提供网站服务的 `Listen`（监听） 语句。 这将允许你使用 `localhost` 域名。

### 测试新配置

重新启动 Apache，你可以访问新应用：

    http://askeet/

![配置](/images/askeet/congratulations.gif)

>**注意**：symfony 可以使用 `mod_rewrite` 模块从 URL 中剔除 /index.php/ 部分。
>如果你不希望这样，或者你的服务器部提供类似的功能，你可以删除 `web/`目录下的 `.htaccess` 文件。
>如果你所使用的 Apache 版本没有编译 `mod_rewrite`， 并确认你安装了 mod_rewrite DSO ，在 `httpd.conf` 中添加如下两行：
>
>     AddModule mod_rewrite.c
>     LoadModule rewrite_module modules/mod_rewrite.so
>
>你可以在You will learn more about the smart URLs in the [链接和路由系统一章](http://www.symfony-project.com/book/1_0/09-Links-and-the-Routing-System)中学到更多关于智能 URL 内容。

你还应该测试对开发环境的访问。键入如下 URL：

    http://askeet/frontend_dev.php/
    
如果 `Alias sf/` 设置正确，debug 工具栏及小图标应出现在页面右上角。

![web debug toolbar](/images/askeet/web_debug1.gif)

如果是在 Windows 上的 IIS 服务器上安装会有些许的不同。在 [相关章节中](http://www.symfony-project.com/cookbook/1_0/web_server_iis) 有配置方法。

版本控制
----------

不担心代码被破坏，是爱偷懒的人很好的一个信条。 我们需要高速地工作， 如果发现做出的更改是没有效率的，会需要逆转回之前的版本，我们还需要不止一个人投身于同一项目的开发，我们还需要能够访问应用程序每天的版本，我们需要的是版本控制。 我们将使用 [Subversion][3] 来实现。 这里假设你已经安装了一个 subversion 服务器，或者可以使用某一个 subversion 服务器。

首先，为 `askeet` 项目建立一个新的仓库：

    $ svnadmin create $SVNREP_DIR/askeet
    $ svn mkdir -m "layout creation" file:///$SVNREP_DIR/askeet/trunk file:///$SVNREP_DIR/askeet/tags file:///$SVNREP_DIR/askeet/branches

然后，必须进行首次的导入，要忽略临时目录 `cache/` 和 `log/` ：

    $ cd /home/sfprojects/askeet
    $ rm -rf cache/*
    $ rm -rf log/*
    $ svn import -m "initial import" . file:///$SVNREP_DIR/askeet/trunk

最后，清除原应用程序目录，签出（checkout）SVN 版本：

    $ cd /home/sfprojects
    $ mv askeet askeet.origin
    $ svn co file:///$SVNREP_DIR/askeet/trunk/ askeet/
    $ ls askeet

    $ rm -rf askeet.origin

安装还差一步。 如果在你提交工作目录到仓库时提交了一些不必要的文件，例如你的项目中 `cache` 和 `log` 目录下的文件。那么你需要为该项目向 SVN 指定忽略列表。

    $ cd /home/sfprojects/askeet
    $ svn propedit svn:ignore cache

SVN 的默认编辑器将被调用。 添加 `cache/` 的子目录，以便SVN在提交时忽略之：

    *

保存并退出，便完成了修改忽略列表。

为 `log/` 重复同样的步骤：

    $ svn propedit svn:ignore log

And enter only:

    *

确认 cache 和 logs 目录被设置为可写，这样你的网站服务器就又可以向其中写入内容了，命令行是：

    $ chmod 777 cache
    $ chmod 777 log

>**注意**：Windows 用户可以使用 [TortoiseSVN][4] 客户端来管理 subversion 仓库。

希望了解更多的版本控制内容，请查阅 symfony 权威指南 [新建项目一章](http://www.symfony-project.com/book/1_0/03-Running-Symfony)。

>**注意**：askeet SVN 仓库是公开的。你可以访问它：
>
>       http://svn.askeet.com/
>
>来吧，签出！
>
>今天的代码已经提交了，你可以签出 `release_day_1` ：
>
>       $ svn co http://svn.askeet.com/tags/release_day_1/ askeet/

明天见
----------------

好啦，已经一个小时了！咱们谈得不少了，对于新结识 symfony 的人没有什么新鲜的。 但还是看一看 symfony 圣诞日历第二天将揭示的内容：

* 程序将做什么
* 建立数据模型并生成对象关系 （object-relational mapping）
* 建立一个模型脚手架

闲暇之余，如果你想了解 askeet 新动态，可以 [订阅 askeet 邮件列表](mailto:askeet-subscribe@symfony-project.com) 或者登陆 [专题论坛](http://www.symfony-project.com/forum/index.php/f/8/)。

别忘了明天回来！

[1]: http://pear.php.net                  "Pear"
[3]: http://subversion.tigris.org/        "Subversion"
[4]: http://tortoisesvn.tigris.org/       "TortoiseSVN"